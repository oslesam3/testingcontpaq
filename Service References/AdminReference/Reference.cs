//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContpaqiApi.AdminReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Administradores", Namespace="http://schemas.datacontract.org/2004/07/WCFContpaq")]
    [System.SerializableAttribute()]
    public partial class Administradores : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdminIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BloqueadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CargarReportesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmarPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CrearAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnviarNotificacionesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermisosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdminID {
            get {
                return this.AdminIDField;
            }
            set {
                if ((this.AdminIDField.Equals(value) != true)) {
                    this.AdminIDField = value;
                    this.RaisePropertyChanged("AdminID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido {
            get {
                return this.ApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoField, value) != true)) {
                    this.ApellidoField = value;
                    this.RaisePropertyChanged("Apellido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bloqueado {
            get {
                return this.BloqueadoField;
            }
            set {
                if ((this.BloqueadoField.Equals(value) != true)) {
                    this.BloqueadoField = value;
                    this.RaisePropertyChanged("Bloqueado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CargarReportes {
            get {
                return this.CargarReportesField;
            }
            set {
                if ((this.CargarReportesField.Equals(value) != true)) {
                    this.CargarReportesField = value;
                    this.RaisePropertyChanged("CargarReportes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmarPassword {
            get {
                return this.ConfirmarPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmarPasswordField, value) != true)) {
                    this.ConfirmarPasswordField = value;
                    this.RaisePropertyChanged("ConfirmarPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CrearAdmin {
            get {
                return this.CrearAdminField;
            }
            set {
                if ((this.CrearAdminField.Equals(value) != true)) {
                    this.CrearAdminField = value;
                    this.RaisePropertyChanged("CrearAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Departamento {
            get {
                return this.DepartamentoField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartamentoField, value) != true)) {
                    this.DepartamentoField = value;
                    this.RaisePropertyChanged("Departamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnviarNotificaciones {
            get {
                return this.EnviarNotificacionesField;
            }
            set {
                if ((this.EnviarNotificacionesField.Equals(value) != true)) {
                    this.EnviarNotificacionesField = value;
                    this.RaisePropertyChanged("EnviarNotificaciones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Permisos {
            get {
                return this.PermisosField;
            }
            set {
                if ((this.PermisosField.Equals(value) != true)) {
                    this.PermisosField = value;
                    this.RaisePropertyChanged("Permisos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rol {
            get {
                return this.RolField;
            }
            set {
                if ((object.ReferenceEquals(this.RolField, value) != true)) {
                    this.RolField = value;
                    this.RaisePropertyChanged("Rol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Departamentos", Namespace="http://schemas.datacontract.org/2004/07/WCFContpaq")]
    [System.SerializableAttribute()]
    public partial class Departamentos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartamentoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartamentoID {
            get {
                return this.DepartamentoIDField;
            }
            set {
                if ((this.DepartamentoIDField.Equals(value) != true)) {
                    this.DepartamentoIDField = value;
                    this.RaisePropertyChanged("DepartamentoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminReference.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/LoginAdministradores", ReplyAction="http://tempuri.org/IAdminService/LoginAdministradoresResponse")]
        ContpaqiApi.AdminReference.Administradores LoginAdministradores(string Usuario, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/LoginAdministradores", ReplyAction="http://tempuri.org/IAdminService/LoginAdministradoresResponse")]
        System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Administradores> LoginAdministradoresAsync(string Usuario, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/MostrarAdministradores", ReplyAction="http://tempuri.org/IAdminService/MostrarAdministradoresResponse")]
        ContpaqiApi.AdminReference.Administradores[] MostrarAdministradores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/MostrarAdministradores", ReplyAction="http://tempuri.org/IAdminService/MostrarAdministradoresResponse")]
        System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Administradores[]> MostrarAdministradoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/VerificarAdministrador", ReplyAction="http://tempuri.org/IAdminService/VerificarAdministradorResponse")]
        string VerificarAdministrador(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/VerificarAdministrador", ReplyAction="http://tempuri.org/IAdminService/VerificarAdministradorResponse")]
        System.Threading.Tasks.Task<string> VerificarAdministradorAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AgregarNuevo", ReplyAction="http://tempuri.org/IAdminService/AgregarNuevoResponse")]
        string AgregarNuevo(ContpaqiApi.AdminReference.Administradores admins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AgregarNuevo", ReplyAction="http://tempuri.org/IAdminService/AgregarNuevoResponse")]
        System.Threading.Tasks.Task<string> AgregarNuevoAsync(ContpaqiApi.AdminReference.Administradores admins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/BuscarAdministrador", ReplyAction="http://tempuri.org/IAdminService/BuscarAdministradorResponse")]
        ContpaqiApi.AdminReference.Administradores[] BuscarAdministrador(string Busqueda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/BuscarAdministrador", ReplyAction="http://tempuri.org/IAdminService/BuscarAdministradorResponse")]
        System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Administradores[]> BuscarAdministradorAsync(string Busqueda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditarAdministrador", ReplyAction="http://tempuri.org/IAdminService/EditarAdministradorResponse")]
        string EditarAdministrador(ContpaqiApi.AdminReference.Administradores Admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditarAdministrador", ReplyAction="http://tempuri.org/IAdminService/EditarAdministradorResponse")]
        System.Threading.Tasks.Task<string> EditarAdministradorAsync(ContpaqiApi.AdminReference.Administradores Admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EliminarAdministrador", ReplyAction="http://tempuri.org/IAdminService/EliminarAdministradorResponse")]
        string EliminarAdministrador(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EliminarAdministrador", ReplyAction="http://tempuri.org/IAdminService/EliminarAdministradorResponse")]
        System.Threading.Tasks.Task<string> EliminarAdministradorAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/MostrarDeptos", ReplyAction="http://tempuri.org/IAdminService/MostrarDeptosResponse")]
        ContpaqiApi.AdminReference.Departamentos[] MostrarDeptos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/MostrarDeptos", ReplyAction="http://tempuri.org/IAdminService/MostrarDeptosResponse")]
        System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Departamentos[]> MostrarDeptosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AgregarDepartamento", ReplyAction="http://tempuri.org/IAdminService/AgregarDepartamentoResponse")]
        string AgregarDepartamento(ContpaqiApi.AdminReference.Departamentos Deptos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AgregarDepartamento", ReplyAction="http://tempuri.org/IAdminService/AgregarDepartamentoResponse")]
        System.Threading.Tasks.Task<string> AgregarDepartamentoAsync(ContpaqiApi.AdminReference.Departamentos Deptos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EliminarDepartamento", ReplyAction="http://tempuri.org/IAdminService/EliminarDepartamentoResponse")]
        string EliminarDepartamento(string Nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EliminarDepartamento", ReplyAction="http://tempuri.org/IAdminService/EliminarDepartamentoResponse")]
        System.Threading.Tasks.Task<string> EliminarDepartamentoAsync(string Nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/BloquearAdministrador", ReplyAction="http://tempuri.org/IAdminService/BloquearAdministradorResponse")]
        string BloquearAdministrador(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/BloquearAdministrador", ReplyAction="http://tempuri.org/IAdminService/BloquearAdministradorResponse")]
        System.Threading.Tasks.Task<string> BloquearAdministradorAsync(string usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : ContpaqiApi.AdminReference.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<ContpaqiApi.AdminReference.IAdminService>, ContpaqiApi.AdminReference.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ContpaqiApi.AdminReference.Administradores LoginAdministradores(string Usuario, string Password) {
            return base.Channel.LoginAdministradores(Usuario, Password);
        }
        
        public System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Administradores> LoginAdministradoresAsync(string Usuario, string Password) {
            return base.Channel.LoginAdministradoresAsync(Usuario, Password);
        }
        
        public ContpaqiApi.AdminReference.Administradores[] MostrarAdministradores() {
            return base.Channel.MostrarAdministradores();
        }
        
        public System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Administradores[]> MostrarAdministradoresAsync() {
            return base.Channel.MostrarAdministradoresAsync();
        }
        
        public string VerificarAdministrador(string usuario) {
            return base.Channel.VerificarAdministrador(usuario);
        }
        
        public System.Threading.Tasks.Task<string> VerificarAdministradorAsync(string usuario) {
            return base.Channel.VerificarAdministradorAsync(usuario);
        }
        
        public string AgregarNuevo(ContpaqiApi.AdminReference.Administradores admins) {
            return base.Channel.AgregarNuevo(admins);
        }
        
        public System.Threading.Tasks.Task<string> AgregarNuevoAsync(ContpaqiApi.AdminReference.Administradores admins) {
            return base.Channel.AgregarNuevoAsync(admins);
        }
        
        public ContpaqiApi.AdminReference.Administradores[] BuscarAdministrador(string Busqueda) {
            return base.Channel.BuscarAdministrador(Busqueda);
        }
        
        public System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Administradores[]> BuscarAdministradorAsync(string Busqueda) {
            return base.Channel.BuscarAdministradorAsync(Busqueda);
        }
        
        public string EditarAdministrador(ContpaqiApi.AdminReference.Administradores Admin) {
            return base.Channel.EditarAdministrador(Admin);
        }
        
        public System.Threading.Tasks.Task<string> EditarAdministradorAsync(ContpaqiApi.AdminReference.Administradores Admin) {
            return base.Channel.EditarAdministradorAsync(Admin);
        }
        
        public string EliminarAdministrador(string usuario) {
            return base.Channel.EliminarAdministrador(usuario);
        }
        
        public System.Threading.Tasks.Task<string> EliminarAdministradorAsync(string usuario) {
            return base.Channel.EliminarAdministradorAsync(usuario);
        }
        
        public ContpaqiApi.AdminReference.Departamentos[] MostrarDeptos() {
            return base.Channel.MostrarDeptos();
        }
        
        public System.Threading.Tasks.Task<ContpaqiApi.AdminReference.Departamentos[]> MostrarDeptosAsync() {
            return base.Channel.MostrarDeptosAsync();
        }
        
        public string AgregarDepartamento(ContpaqiApi.AdminReference.Departamentos Deptos) {
            return base.Channel.AgregarDepartamento(Deptos);
        }
        
        public System.Threading.Tasks.Task<string> AgregarDepartamentoAsync(ContpaqiApi.AdminReference.Departamentos Deptos) {
            return base.Channel.AgregarDepartamentoAsync(Deptos);
        }
        
        public string EliminarDepartamento(string Nombre) {
            return base.Channel.EliminarDepartamento(Nombre);
        }
        
        public System.Threading.Tasks.Task<string> EliminarDepartamentoAsync(string Nombre) {
            return base.Channel.EliminarDepartamentoAsync(Nombre);
        }
        
        public string BloquearAdministrador(string usuario) {
            return base.Channel.BloquearAdministrador(usuario);
        }
        
        public System.Threading.Tasks.Task<string> BloquearAdministradorAsync(string usuario) {
            return base.Channel.BloquearAdministradorAsync(usuario);
        }
    }
}
